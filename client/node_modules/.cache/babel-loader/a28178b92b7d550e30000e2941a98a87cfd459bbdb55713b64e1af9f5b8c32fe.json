{"ast":null,"code":"var _jsxFileName = \"/home/ivan/Desktop/diplom/client/src/pages/ChatsIndexPage.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport Echo from \"laravel-echo\";\nimport Pusher from \"pusher-js\";\nimport { useContext, useEffect } from \"react\";\nimport { UserContext } from \"../UserContext\";\nimport { useState } from \"react\";\nimport { Navigate, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ChatsIndexPage() {\n  _s();\n  const [chats, setChats] = useState([]);\n  const params = useParams();\n  const {\n    user,\n    getUser\n  } = useContext(UserContext);\n  const [selectedChat, setSelectedChat] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  window.Pusher = Pusher;\n  window.Echo = new Echo({\n    broadcaster: 'pusher',\n    key: '0abcc2e1499f2ddde046',\n    cluster: 'eu',\n    forceTls: true,\n    encrypted: true\n  });\n\n  /*useEffect(() => {\n      if (!user) {\n          getUser();\n      } else {\n          const fetchChats = async () => {\n              const response = await axios.get(`/chats?user_id=${user.data.id}`);\n              setChats(response.data);\n          }\n           fetchChats();\n           if (selectedChat) {\n              window.Echo.channel(`chat.${selectedChat.chat_id}`)\n              .listen('MessageSent', (e) => {\n                  console.log(e);\n                  setMessages(messages => [...messages, e.message]);\n              });\n  \n              return () => {\n                  window.Echo.leaveChannel(`chat.${selectedChat.chat_id}`);\n              }\n          }    \n      }\n  }, [user]);\n   const selectChat = async (chat_id) => {\n      const response = await axios.get(`/chats/${chat_id}`);\n      setSelectedChat(response.data);\n      setMessages(response.data.messages);\n  };\n   const sendMessage = async () => {\n      if (selectedChat && newMessage.length != null) {\n          var today = new Date();\n          await axios.post(`/chats/${selectedChat.chat_id}`, {\n              message_text: newMessage,\n              sender_id: user.data.id,\n              chat_id: selectedChat.chat_id,\n              message_datetime: `${today.getFullYear()}-${today.getMonth() + 1}-${today.getDate()} \n                  ${today.getHours()}:${today.getMinutes()}:${today.getSeconds()}`\n          });\n           setNewMessage('');\n      }\n  };*/\n\n  window.Echo.channel(`chat.1`).listen('MessageSent', e => {\n    console.log(e);\n    setMessages(messages => [...messages, e.message]);\n  });\n  return () => {\n    window.Echo.leaveChannel(`chat.${selectedChat.chat_id}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Chat Rooms\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: chats.map(chat => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => selectChat(chat.chat_id),\n          children: chat.chat_id\n        }, chat.chat_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: selectChat && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Messages in \", selectChat.chat_id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: msg.message_text\n          }, msg.message_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n}\n_s(ChatsIndexPage, \"ax4cONu9u29C4zfsTb2V/tlxya0=\", false, function () {\n  return [useParams];\n});\n_c = ChatsIndexPage;\nvar _c;\n$RefreshReg$(_c, \"ChatsIndexPage\");","map":{"version":3,"names":["axios","Echo","Pusher","useContext","useEffect","UserContext","useState","Navigate","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatsIndexPage","_s","chats","setChats","params","user","getUser","selectedChat","setSelectedChat","messages","setMessages","newMessage","setNewMessage","window","broadcaster","key","cluster","forceTls","encrypted","channel","listen","e","console","log","message","leaveChannel","chat_id","children","fileName","_jsxFileName","lineNumber","columnNumber","map","chat","onClick","selectChat","msg","message_text","message_id","type","value","onChange","target","sendMessage","_c","$RefreshReg$"],"sources":["/home/ivan/Desktop/diplom/client/src/pages/ChatsIndexPage.jsx"],"sourcesContent":["import axios from \"axios\";\nimport Echo from \"laravel-echo\";\nimport Pusher from \"pusher-js\";\nimport { useContext, useEffect } from \"react\";\nimport { UserContext } from \"../UserContext\";\nimport { useState } from \"react\";\nimport { Navigate, useParams } from \"react-router-dom\";\n\nexport default function ChatsIndexPage() {\n    const [chats, setChats] = useState([]);\n    const params = useParams();\n    const {user, getUser} = useContext(UserContext);\n    const [selectedChat, setSelectedChat] = useState(null);\n    const [messages, setMessages] = useState([]);\n    const [newMessage, setNewMessage] = useState('');\n    \n    window.Pusher = Pusher;\n    window.Echo = new Echo({\n        broadcaster: 'pusher',\n        key: '0abcc2e1499f2ddde046',\n        cluster: 'eu',\n        forceTls: true,\n        encrypted: true\n    })\n\n    /*useEffect(() => {\n        if (!user) {\n            getUser();\n        } else {\n            const fetchChats = async () => {\n                const response = await axios.get(`/chats?user_id=${user.data.id}`);\n                setChats(response.data);\n            }\n\n            fetchChats();\n\n            if (selectedChat) {\n                window.Echo.channel(`chat.${selectedChat.chat_id}`)\n                .listen('MessageSent', (e) => {\n                    console.log(e);\n                    setMessages(messages => [...messages, e.message]);\n                });\n    \n                return () => {\n                    window.Echo.leaveChannel(`chat.${selectedChat.chat_id}`);\n                }\n            }    \n        }\n    }, [user]);\n\n    const selectChat = async (chat_id) => {\n        const response = await axios.get(`/chats/${chat_id}`);\n        setSelectedChat(response.data);\n        setMessages(response.data.messages);\n    };\n\n    const sendMessage = async () => {\n        if (selectedChat && newMessage.length != null) {\n            var today = new Date();\n            await axios.post(`/chats/${selectedChat.chat_id}`, {\n                message_text: newMessage,\n                sender_id: user.data.id,\n                chat_id: selectedChat.chat_id,\n                message_datetime: `${today.getFullYear()}-${today.getMonth() + 1}-${today.getDate()} \n                    ${today.getHours()}:${today.getMinutes()}:${today.getSeconds()}`\n            });\n\n            setNewMessage('');\n        }\n    };*/\n\n    window.Echo.channel(`chat.1`)\n                .listen('MessageSent', (e) => {\n                    console.log(e);\n                    setMessages(messages => [...messages, e.message]);\n                });\n    \n                return () => {\n                    window.Echo.leaveChannel(`chat.${selectedChat.chat_id}`);\n                }\n\n\n    return (\n        <div>\n            <div>\n                <h2>Chat Rooms</h2>\n                <ul>\n                    {chats.map(chat => (\n                        <li key={chat.chat_id} onClick={() => selectChat(chat.chat_id)}>\n                            {chat.chat_id}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n            <div>\n                {selectChat && (\n                    <>\n                        <h3>Messages in {selectChat.chat_id}</h3>\n                        <div>\n                            {messages.map((msg) => (\n                                <div key={msg.message_id}>{msg.message_text}</div>\n                            ))}\n                        </div>\n                        <input\n                            type=\"text\"\n                            value={newMessage}\n                            onChange={(e) => setNewMessage(e.target.value)}\n                        />\n                        <button onClick={sendMessage}>Send</button>\n                    </>\n                )}\n            </div>\n        </div>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}