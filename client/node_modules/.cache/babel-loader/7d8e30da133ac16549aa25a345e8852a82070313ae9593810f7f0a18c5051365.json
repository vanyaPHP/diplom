{"ast":null,"code":"var _jsxFileName = \"/home/ivan/Desktop/diplom/client/src/pages/ChatsIndexPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport Echo from 'laravel-echo';\nimport Pusher from 'pusher-js';\nimport { UserContext } from \"../UserContext\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [chatRooms, setChatRooms] = useState([]);\n  const {\n    user,\n    getUser\n  } = useContext(UserContext);\n  const [selectedChatRoom, setSelectedChatRoom] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    if (!user) {\n      getUser();\n    } else {\n      window.Pusher = Pusher;\n      window.Echo = new Echo({\n        broadcaster: 'pusher',\n        key: '0abcc2e1499f2ddde046',\n        cluster: 'eu',\n        forceTLS: true\n      });\n      window.Echo.channel(`chat.${selectedChatRoom.chat_id}`).listen('MessageSent', e => {\n        console.log('Message received:', e); // Add console log to check messages\n        setMessages(messages => [...messages, e.message]);\n      });\n    }\n  }, [user]);\n  useEffect(() => {\n    if (selectedChatRoom) {\n      window.Echo.channel(`chat.${selectedChatRoom.chat_id}`).listen('MessageSent', e => {\n        console.log('Message received:', e); // Add console log to check messages\n        setMessages(messages => [...messages, e.message]);\n      });\n      return () => {\n        window.Echo.leaveChannel(`chat.${selectedChatRoom.chat_id}`);\n      };\n    }\n  }, [selectedChatRoom]);\n  const selectChatRoom = async chatRoom => {\n    setSelectedChatRoom(chatRoom);\n    const response = await axios.get(`/chats/${chatRoom.chat_id}`);\n    setMessages(response.data.messages);\n  };\n  const sendMessage = async () => {\n    if (selectedChatRoom && message) {\n      await axios.post(`/chats/${selectedChatRoom.chat_id}`, {\n        chat_id: selectedChatRoom.chat_id,\n        message_text: '123',\n        sender_id: user.data.id,\n        message_datetime: \"2024-06-10 22:22:22\"\n      });\n      setMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Chat Rooms\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: chatRooms.map(chatRoom => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => selectChatRoom(chatRoom),\n          children: chatRoom.chat_id\n        }, chatRoom.chat_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: selectedChatRoom && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Messages in \", selectedChatRoom.chat_id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: msg.message_text\n          }, msg.message_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: message,\n          onChange: e => setMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n_s(Chat, \"E4s81VoyW+qjAyzRKjwZjw7Dw1Y=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useContext","useEffect","useState","Echo","Pusher","UserContext","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Chat","_s","chatRooms","setChatRooms","user","getUser","selectedChatRoom","setSelectedChatRoom","messages","setMessages","message","setMessage","window","broadcaster","key","cluster","forceTLS","channel","chat_id","listen","e","console","log","leaveChannel","selectChatRoom","chatRoom","response","get","data","sendMessage","post","message_text","sender_id","id","message_datetime","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","msg","message_id","type","value","onChange","target","_c","$RefreshReg$"],"sources":["/home/ivan/Desktop/diplom/client/src/pages/ChatsIndexPage.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport Echo from 'laravel-echo';\nimport Pusher from 'pusher-js';\nimport {UserContext} from \"../UserContext\";\nimport axios from 'axios';\n\nconst Chat = () => {\n    const [chatRooms, setChatRooms] = useState([]);\n    const {user, getUser} = useContext(UserContext);\n    const [selectedChatRoom, setSelectedChatRoom] = useState(null);\n    const [messages, setMessages] = useState([]);\n    const [message, setMessage] = useState('');\n\n    useEffect(() => {\n        if (!user) {\n            getUser();\n        } else {\n            window.Pusher = Pusher;\n            window.Echo = new Echo({\n                broadcaster: 'pusher',\n                key: '0abcc2e1499f2ddde046',\n                cluster: 'eu',\n                forceTLS: true,\n            });\n\n            window.Echo.channel(`chat.${selectedChatRoom.chat_id}`)\n                .listen('MessageSent', (e) => {\n                    console.log('Message received:', e);  // Add console log to check messages\n                    setMessages(messages => [...messages, e.message]);\n                });\n        }\n    }, [user]);\n\n    useEffect(() => {\n        if (selectedChatRoom) {\n            window.Echo.channel(`chat.${selectedChatRoom.chat_id}`)\n                .listen('MessageSent', (e) => {\n                    console.log('Message received:', e);  // Add console log to check messages\n                    setMessages(messages => [...messages, e.message]);\n                });\n\n            return () => {\n                window.Echo.leaveChannel(`chat.${selectedChatRoom.chat_id}`);\n            };\n        }\n    }, [selectedChatRoom]);\n\n    const selectChatRoom = async (chatRoom) => {\n        setSelectedChatRoom(chatRoom);\n        const response = await axios.get(`/chats/${chatRoom.chat_id}`);\n        setMessages(response.data.messages);\n    };\n\n    const sendMessage = async () => {\n        if (selectedChatRoom && message) {\n            await axios.post(`/chats/${selectedChatRoom.chat_id}`, {\n                chat_id: selectedChatRoom.chat_id,\n                message_text: '123',\n                sender_id: user.data.id,\n                message_datetime: \"2024-06-10 22:22:22\"\n            });\n            setMessage('');\n        }\n    };\n\n    return (\n        <div>\n            <div>\n                <h2>Chat Rooms</h2>\n                <ul>\n                    {chatRooms.map(chatRoom => (\n                        <li key={chatRoom.chat_id} onClick={() => selectChatRoom(chatRoom)}>\n                            {chatRoom.chat_id}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n            <div>\n                {selectedChatRoom && (\n                    <>\n                        <h3>Messages in {selectedChatRoom.chat_id}</h3>\n                        <div>\n                            {messages.map((msg) => (\n                                <div key={msg.message_id}>{msg.message_text}</div>\n                            ))}\n                        </div>\n                        <input\n                            type=\"text\"\n                            value={message}\n                            onChange={(e) => setMessage(e.target.value)}\n                        />\n                        <button onClick={sendMessage}>Send</button>\n                    </>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default Chat;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}