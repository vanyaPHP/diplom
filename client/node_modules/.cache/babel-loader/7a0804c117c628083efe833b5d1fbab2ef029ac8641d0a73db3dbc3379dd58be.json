{"ast":null,"code":"var _jsxFileName = \"/home/ivan/Desktop/diplom/client/src/pages/ChatsIndexPage.jsx\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect } from \"react\";\nimport { useState } from \"react\";\nimport Navbar from \"../components/Helpers/Navbar\";\nimport Footer from \"../components/Helpers/Footer\";\nimport { UserContext } from \"../UserContext\";\nimport { io } from \"socket.io-client\";\nimport { css } from \"@emotion/react\";\nimport ClockLoader from \"react-spinners/ClockLoader\";\nimport axios from \"axios\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:8003');\nexport default function ChatsIndexPage() {\n  _s();\n  const {\n    user,\n    getUser\n  } = useContext(UserContext);\n  const [chats, setChats] = useState(null);\n  const [reportChats, setReportChats] = useState(null);\n  const [selectedChat, setSelectedChat] = useState(null);\n  const [isSelectedChatReport, setIsSelectedChatReport] = useState(null);\n  const [messages, setMessages] = useState(null);\n  const [queryParams] = useSearchParams();\n  const [isNewMessageLoading, setIsNewMessageLoading] = useState(false);\n  const [newMessage, setNewMessage] = useState('');\n  const override = css`\n        display: block;\n        margin: 0 auto;\n        border-color: red;\n    `;\n  useEffect(() => {\n    if (!user) {\n      getUser();\n    } else {\n      fetchChats(queryParams.get('chat_id'));\n      if (selectedChat) {\n        fetchMessages(selectedChat.chat_id);\n      }\n      socket.on('chat', handleChatEvent);\n      socket.on('message', handleMessageEvent);\n      return () => {\n        socket.off('chat', handleChatEvent);\n        socket.off('message', handleMessageEvent);\n      };\n    }\n  }, [user, selectedChat]);\n  const handleChatEvent = data => {\n    const {\n      action,\n      chat\n    } = data;\n    if (action === 'create') {\n      if (!chats) {\n        setChats([chat]);\n      }\n      setChats(prevChats => [...prevChats, chat]);\n    }\n  };\n  const handleMessageEvent = data => {\n    const {\n      action,\n      message\n    } = data;\n    if (action === 'create') {\n      if (isSelectedChatReport && message.report_chat_id == selectedChat.chat_id) {\n        setMessages(prevMessages => [...prevMessages, message]);\n      } else if (!isSelectedChatReport && message.chat_id == selectedChat.chat_id) {\n        setMessages(prevMessages => [...prevMessages, message]);\n      }\n    }\n  };\n  const fetchChats = (chatIdToSelect = null) => {\n    axios.get(`http://localhost:8003/api/chats?id=${user.data.id}&is_admin=${user.data.is_admin}`).then(response => {\n      let chats = response.data;\n      if (chatIdToSelect) {\n        setSelectedChat(chats[0].filter(chat => chat.chat_id == chatIdToSelect)[0]);\n      }\n      console.log();\n      setChats(chats[0]);\n      setReportChats(chats[1]);\n    }).catch(error => {\n      console.error('Error fetching chats:', error);\n    });\n  };\n  const fetchMessages = chatId => {\n    axios.get(`http://localhost:8003/api/chats/${chatId}/messages?is_admin_chat=${isSelectedChatReport}`).then(response => {\n      setMessages(response.data);\n      socket.emit('join', chatId);\n    }).catch(error => {\n      console.error(`Error fetching messages for chat ${chatId}:`, error);\n    });\n  };\n  const sendMessage = (chatId, isSelectedChatReport) => {\n    if (newMessage.length > 0) {\n      setIsNewMessageLoading(true);\n      let date = new Date();\n      isSelectedChatReport = isSelectedChatReport == true ? true : false;\n      let day = `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()}`;\n      let time = `${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`;\n      axios.post(`http://localhost:8003/api/chats/${chatId}/messages?is_admin_chat=${isSelectedChatReport}`, {\n        message_text: newMessage,\n        message_datetime: day + \" \" + time,\n        sender_id: user.data.id,\n        is_admin_sender: isSelectedChatReport ? user.data.is_admin : false\n      }).then(() => {\n        setNewMessage('');\n        setIsNewMessageLoading(false);\n      }).catch(error => {\n        console.error('Error sending message:', error);\n      });\n    }\n  };\n  const chooseChat = (chat, isSelectedChatReport = false) => {\n    setIsSelectedChatReport(isSelectedChatReport);\n    setSelectedChat(chat);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex bg-gray-100 min-h-screen\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-1/4 bg-white border-r overflow-y-scroll\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-xl font-bold py-4 px-6 border-b border-gray-200\",\n          children: \"\\u0427\\u0430\\u0442\\u044B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), chats || reportChats ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [chats.map(chat => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"px-6 py-4 cursor-pointer border-b border-gray-200 hover:bg-gray-50\",\n            onClick: () => chooseChat(chat),\n            children: chat.first_user.user_id == user.data.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [chat.second_user.first_name, \" \", chat.second_user.last_name]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [chat.first_user.first_name, \" \", chat.first_user.last_name]\n            }, void 0, true)\n          }, chat.chat_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 29\n          }, this)), reportChats.map(reportChat => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"px-6 py-4 cursor-pointer border-b border-gray-200 hover:bg-gray-50\",\n            onClick: () => chooseChat(reportChat, true),\n            children: reportChat.user.user_id == user.data.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [reportChat.admin.first_name, \" \", reportChat.admin.last_name]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [reportChat.user.first_name, \" \", reportChat.user.last_name]\n            }, void 0, true)\n          }, \"report_\" + reportChat.report_chat_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 27\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ring-loader mt-32\",\n          style: {\n            minHeight: \"10vh\",\n            display: \"grid\",\n            placeContent: \"center\"\n          },\n          children: /*#__PURE__*/_jsxDEV(ClockLoader, {\n            css: override,\n            size: 250,\n            color: \"#9CA3AF\",\n            loading: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 19\n      }, this), selectedChat && (messages && !isNewMessageLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 flex flex-col\",\n        children: selectedChat && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col flex-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white border-b border-gray-200 flex justify-between items-center p-4\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-lg font-bold\",\n              children: isSelectedChatReport ? selectedChat.user.user_id == user.data.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [selectedChat.user.first_name, \" \", selectedChat.user.last_name]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [selectedChat.admin.first_name, \" \", selectedChat.admin.last_name]\n              }, void 0, true) : selectedChat.first_user.user_id == user.data.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [selectedChat.second_user.first_name, \" \", selectedChat.second_user.last_name]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [selectedChat.first_user.first_name, \" \", selectedChat.first_user.last_name]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-1 bg-white border rounded-md border-gray-200 p-4 overflow-y-scroll\",\n            children: isSelectedChatReport ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: messages && messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `\n                                              mb-4 ${message.sender_id == user.data.id ? 'text-right' : 'text-left'}\n                                            `,\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `inline-block rounded-lg px-3\n                                                py-1 max-w-xs ${message.sender_id == user.data.id ? 'text-black bg-gray-400' : 'text-white bg-blue-700'}\n                                              `,\n                  children: [message.report_message_text, /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `block text-xs mt-2 \n                                                  ${message.sender_id == user.data.id ? 'text-black text-right' : 'text-white text-right'}\n                                                `,\n                    children: new Date(Date.parse(message.report_message_datetime)).toISOString().replace('T', ' ').substring(0, 16)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 229,\n                    columnNumber: 47\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 45\n                }, this)\n              }, message.report_message_id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 43\n              }, this))\n            }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: messages && messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `\n                                              mb-4 ${message.sender.user_id == user.data.id ? 'text-right' : 'text-left'}\n                                            `,\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `inline-block rounded-lg px-3\n                                                py-1 max-w-xs ${message.sender.user_id == user.data.id ? 'text-black bg-gray-400' : 'text-white bg-blue-700'}\n                                              `,\n                  children: [message.message_text, /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `block text-xs mt-2 \n                                                  ${message.sender.user_id == user.data.id ? 'text-black text-right' : 'text-white text-right'}\n                                                `,\n                    children: new Date(Date.parse(message.message_datetime)).toISOString().replace('T', ' ').substring(0, 16)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 47\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 45\n                }, this)\n              }, message.message_id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 43\n              }, this))\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center p-4 gap-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"border border-gray-300 p-3 w-full rounded-l\",\n              placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435...\",\n              value: newMessage,\n              onChange: e => setNewMessage(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 35\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-r\",\n              onClick: () => sendMessage(selectedChat.chat_id, isSelectedChatReport),\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                fill: \"none\",\n                viewBox: \"0 0 24 24\",\n                strokeWidth: 1.5,\n                stroke: \"currentColor\",\n                className: \"size-6\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  d: \"M6 12 3.269 3.125A59.769 59.769 0 0 1 21.485 12 59.768 59.768 0 0 1 3.27 20.875L5.999 12Zm0 0h7.5\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 39\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 35\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ring-loader m-auto mb-96\",\n        style: {\n          minHeight: \"10vh\",\n          display: \"grid\",\n          placeContent: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(ClockLoader, {\n          css: override,\n          size: 250,\n          color: \"#9CA3AF\",\n          loading: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 23\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n}\n_s(ChatsIndexPage, \"6VTSBxjhtaGvX8gk1ZXZLTHGufA=\", false, function () {\n  return [useSearchParams];\n});\n_c = ChatsIndexPage;\nvar _c;\n$RefreshReg$(_c, \"ChatsIndexPage\");","map":{"version":3,"names":["useContext","useEffect","useState","Navbar","Footer","UserContext","io","css","ClockLoader","axios","useSearchParams","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","ChatsIndexPage","_s","user","getUser","chats","setChats","reportChats","setReportChats","selectedChat","setSelectedChat","isSelectedChatReport","setIsSelectedChatReport","messages","setMessages","queryParams","isNewMessageLoading","setIsNewMessageLoading","newMessage","setNewMessage","override","fetchChats","get","fetchMessages","chat_id","on","handleChatEvent","handleMessageEvent","off","data","action","chat","prevChats","message","report_chat_id","prevMessages","chatIdToSelect","id","is_admin","then","response","filter","console","log","catch","error","chatId","emit","sendMessage","length","date","Date","day","getFullYear","getMonth","getDate","time","getHours","getMinutes","getSeconds","post","message_text","message_datetime","sender_id","is_admin_sender","chooseChat","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","onClick","first_user","user_id","second_user","first_name","last_name","reportChat","admin","style","minHeight","display","placeContent","size","color","loading","report_message_text","parse","report_message_datetime","toISOString","replace","substring","report_message_id","sender","message_id","type","placeholder","value","onChange","e","target","xmlns","fill","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","_c","$RefreshReg$"],"sources":["/home/ivan/Desktop/diplom/client/src/pages/ChatsIndexPage.jsx"],"sourcesContent":["import { useContext, useEffect } from \"react\";\nimport { useState } from \"react\";\nimport Navbar from \"../components/Helpers/Navbar\";\nimport Footer from \"../components/Helpers/Footer\";\nimport { UserContext } from \"../UserContext\";\nimport { io } from \"socket.io-client\";\nimport {css} from \"@emotion/react\";\nimport ClockLoader from \"react-spinners/ClockLoader\";\nimport axios from \"axios\";\nimport { useSearchParams } from \"react-router-dom\";\n\nconst socket = io('http://localhost:8003');\n\nexport default function ChatsIndexPage() {\n    const {user, getUser} = useContext(UserContext);\n    const [chats, setChats] = useState(null);\n    const [reportChats, setReportChats] = useState(null);\n    const [selectedChat, setSelectedChat] = useState(null);\n    const [isSelectedChatReport, setIsSelectedChatReport] = useState(null);\n    const [messages, setMessages] = useState(null);\n    const [queryParams] = useSearchParams();\n    const [isNewMessageLoading, setIsNewMessageLoading] = useState(false);\n    const [newMessage, setNewMessage] = useState('');\n    const override = css`\n        display: block;\n        margin: 0 auto;\n        border-color: red;\n    `; \n\n    useEffect(() => {\n        if (!user) {\n            getUser();\n        } else {\n            fetchChats(queryParams.get('chat_id'));\n            if (selectedChat) {\n                fetchMessages(selectedChat.chat_id);\n            }\n            socket.on('chat', handleChatEvent);\n            socket.on('message', handleMessageEvent);\n            return () => {\n                socket.off('chat', handleChatEvent);\n                socket.off('message', handleMessageEvent);\n            };\n        }\n    }, [user, selectedChat]);\n    \n    const handleChatEvent = (data) => {\n        const { action, chat } = data;\n        if (action === 'create') {\n          if (!chats) {\n              setChats([chat]);\n          }\n          setChats(prevChats => [...prevChats, chat]);\n        }\n    };\n    \n    const handleMessageEvent = (data) => {\n        const { action, message } = data;\n        if (action === 'create') {\n          if (isSelectedChatReport && message.report_chat_id == selectedChat.chat_id) {\n            setMessages(prevMessages => [...prevMessages, message]);\n          } else if (!isSelectedChatReport && message.chat_id == selectedChat.chat_id) {\n            setMessages(prevMessages => [...prevMessages, message]);\n          }\n        }\n    };\n    \n    const fetchChats = (chatIdToSelect = null) => {\n        axios.get(`http://localhost:8003/api/chats?id=${user.data.id}&is_admin=${user.data.is_admin}`)\n          .then(response => {\n            let chats = response.data;\n            if (chatIdToSelect) {\n                setSelectedChat(chats[0].filter((chat) => chat.chat_id == chatIdToSelect)[0]);\n            }\n            console.log()\n            setChats(chats[0]);\n            setReportChats(chats[1]);\n          })\n          .catch(error => {\n            console.error('Error fetching chats:', error);\n          });\n    };\n    \n    const fetchMessages = (chatId) => {\n        axios.get(`http://localhost:8003/api/chats/${chatId}/messages?is_admin_chat=${isSelectedChatReport}`)\n          .then(response => {\n            setMessages(response.data);\n            socket.emit('join', chatId);\n          })\n          .catch(error => {\n            console.error(`Error fetching messages for chat ${chatId}:`, error);\n        });\n    };\n    \n    \n    const sendMessage = (chatId, isSelectedChatReport) => {\n        if (newMessage.length > 0) {\n            setIsNewMessageLoading(true);\n            let date = new Date();\n            isSelectedChatReport = (isSelectedChatReport == true) ? true : false;\n            let day = `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()}`;\n            let time = `${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`;\n            axios.post(`http://localhost:8003/api/chats/${chatId}/messages?is_admin_chat=${isSelectedChatReport}`, {\n                message_text: newMessage,\n                message_datetime: day + \" \" + time,\n                sender_id: user.data.id,\n                is_admin_sender: isSelectedChatReport ? (user.data.is_admin) : false\n             })\n             .then(() => {\n               setNewMessage('');\n               setIsNewMessageLoading(false);\n             })\n             .catch(error => {\n               console.error('Error sending message:', error);\n             });\n        }\n    };\n\n    const chooseChat = (chat, isSelectedChatReport = false) => {\n      setIsSelectedChatReport(isSelectedChatReport);\n      setSelectedChat(chat);\n    }\n\n    return (\n      <>\n          <Navbar/>\n              <div className=\"flex bg-gray-100 min-h-screen\">\n                  <div className=\"w-1/4 bg-white border-r overflow-y-scroll\">\n                    <h1 className=\"text-xl font-bold py-4 px-6 border-b border-gray-200\">Чаты</h1>\n                    {\n                        chats || reportChats\n                        ?\n                          <ul>\n                          {chats.map(chat => (\n                            <li key={chat.chat_id} className=\"px-6 py-4 cursor-pointer border-b border-gray-200 hover:bg-gray-50\" onClick={() => chooseChat(chat)}>\n                              {\n                                  chat.first_user.user_id == user.data.id\n                                  ?\n                                      <>\n                                        {chat.second_user.first_name} {chat.second_user.last_name}\n                                      </>\n                                  :\n                                      <>\n                                        {chat.first_user.first_name} {chat.first_user.last_name}\n                                      </>\n                              }\n                            </li>\n                          ))}\n                          {reportChats.map(reportChat => (\n                            <li key={\"report_\" + reportChat.report_chat_id} className=\"px-6 py-4 cursor-pointer border-b border-gray-200 hover:bg-gray-50\" onClick={() => chooseChat(reportChat, true)}>\n                              {\n                                  reportChat.user.user_id == user.data.id\n                                  ?\n                                      <>\n                                        {reportChat.admin.first_name} {reportChat.admin.last_name}\n                                      </>\n                                  :\n                                      <>\n                                        {reportChat.user.first_name} {reportChat.user.last_name}\n                                      </>\n                              }\n                            </li>\n                          ))}\n                          </ul>\n                        :\n                          <div \n                            className=\"ring-loader mt-32\" style={{minHeight: \"10vh\", display: \"grid\", placeContent: \"center\"}}>\n                            <ClockLoader\n                              css={override}\n                              size={250}\n                              color={\"#9CA3AF\"}\n                              loading={true}/>\n                          </div>\n                    }\n                  </div>\n                  {selectedChat && \n                  (\n                    messages && !isNewMessageLoading\n                    ?\n                      <div className=\"flex-1 flex flex-col\">\n                          {selectedChat && (\n                            <div className=\"flex flex-col flex-1\">\n                              <div className=\"bg-white border-b border-gray-200 flex justify-between items-center p-4\">\n                                <h2 className=\"text-lg font-bold\">\n                                  {\n                                      isSelectedChatReport \n                                      ?\n                                        selectedChat.user.user_id == user.data.id\n                                        ?\n                                            <>\n                                              {selectedChat.user.first_name} {selectedChat.user.last_name}\n                                            </>\n                                        :\n                                            <>\n                                              {selectedChat.admin.first_name} {selectedChat.admin.last_name}\n                                            </>\n                                      :\n                                        selectedChat.first_user.user_id == user.data.id\n                                        ?\n                                            <>\n                                              {selectedChat.second_user.first_name} {selectedChat.second_user.last_name}\n                                            </>\n                                        :\n                                            <>\n                                              {selectedChat.first_user.first_name} {selectedChat.first_user.last_name}\n                                            </>\n                                  }\n                                </h2>\n                              </div>\n                              <div className=\"flex-1 bg-white border rounded-md border-gray-200 p-4 overflow-y-scroll\">\n                                {isSelectedChatReport\n                                  ?\n                                    <>\n                                       {messages && messages.map((message) => (\n                                          <div key={message.report_message_id} \n                                            className={`\n                                              mb-4 ${message.sender_id == user.data.id\n                                                ? 'text-right'\n                                                : 'text-left'}\n                                            `}>\n                                            <span \n                                              className={`inline-block rounded-lg px-3\n                                                py-1 max-w-xs ${message.sender_id == user.data.id\n                                                    ? 'text-black bg-gray-400'\n                                                    : 'text-white bg-blue-700'}\n                                              `}\n                                            >\n                                              {message.report_message_text}\n                                              <span \n                                                className={`block text-xs mt-2 \n                                                  ${\n                                                      message.sender_id == user.data.id\n                                                      ?\n                                                        'text-black text-right'\n                                                      :\n                                                        'text-white text-right'    \n                                                  }\n                                                `}>\n                                                {new Date(Date.parse(message.report_message_datetime))\n                                                  .toISOString()\n                                                  .replace('T', ' ')\n                                                  .substring(0, 16)\n                                                }\n                                              </span>\n                                            </span>\n                                          </div>\n                                       ))}\n                                    </>\n                                  :\n                                    <>\n                                         {messages && messages.map((message) => (\n                                          <div key={message.message_id} \n                                            className={`\n                                              mb-4 ${message.sender.user_id == user.data.id\n                                                ? 'text-right'\n                                                : 'text-left'}\n                                            `}>\n                                            <span \n                                              className={`inline-block rounded-lg px-3\n                                                py-1 max-w-xs ${message.sender.user_id == user.data.id\n                                                    ? 'text-black bg-gray-400'\n                                                    : 'text-white bg-blue-700'}\n                                              `}\n                                            >\n                                              {message.message_text}\n                                              <span \n                                                className={`block text-xs mt-2 \n                                                  ${\n                                                      message.sender.user_id == user.data.id\n                                                      ?\n                                                        'text-black text-right'\n                                                      :\n                                                        'text-white text-right'    \n                                                  }\n                                                `}>\n                                                {new Date(Date.parse(message.message_datetime))\n                                                  .toISOString()\n                                                  .replace('T', ' ')\n                                                  .substring(0, 16)\n                                                }\n                                              </span>\n                                            </span>\n                                          </div>\n                                        ))}\n                                    </>\n                                }\n                              </div>\n                              <div className=\"flex items-center p-4 gap-4\">\n                                  <input\n                                    type=\"text\"\n                                    className=\"border border-gray-300 p-3 w-full rounded-l\"\n                                    placeholder=\"Введите сообщение...\"\n                                    value={newMessage}\n                                    onChange={(e) => setNewMessage(e.target.value)}\n                                  />\n                                  <button \n                                    className=\"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-r\"\n                                    onClick={() => sendMessage(selectedChat.chat_id, isSelectedChatReport)}\n                                  >\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"size-6\">\n                                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 12 3.269 3.125A59.769 59.769 0 0 1 21.485 12 59.768 59.768 0 0 1 3.27 20.875L5.999 12Zm0 0h7.5\" />\n                                    </svg>\n                                  </button>\n                              </div>\n                            </div>\n                          )}\n                      </div>\n                    :\n                      <div \n                        className=\"ring-loader m-auto mb-96\" style={{minHeight: \"10vh\", display: \"grid\", placeContent: \"center\"}}>\n                        <ClockLoader\n                          css={override}\n                          size={250}\n                          color={\"#9CA3AF\"}\n                          loading={true}/>\n                      </div>\n                  )\n                  }\n              </div>\n          <Footer/>\n      </>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}