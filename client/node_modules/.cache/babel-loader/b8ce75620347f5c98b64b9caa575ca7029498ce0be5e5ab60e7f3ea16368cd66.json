{"ast":null,"code":"var _jsxFileName = \"/home/ivan/Desktop/diplom/client/src/pages/ChatsIndexPage.jsx\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { UserContext } from \"../UserContext\";\nimport { io } from \"socket.io-client\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:8003');\nexport default function ChatsIndexPage() {\n  _s();\n  const {\n    user,\n    getUser\n  } = useContext(UserContext);\n  const [chats, setChats] = useState([]);\n  const [selectedChatId, setSelectedChatId] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  useEffect(() => {\n    if (!user) {\n      getUser();\n    } else {\n      fetchChats();\n      socket.on('chat', handleChatEvent);\n      socket.on('message', handleMessageEvent);\n      return () => {\n        socket.off('chat', handleChatEvent);\n        socket.off('message', handleMessageEvent);\n      };\n    }\n  }, []);\n  const handleChatEvent = data => {\n    const {\n      action,\n      chat\n    } = data;\n    if (action === 'create') {\n      setChats(prevChats => [...prevChats, chat]);\n    }\n  };\n  const handleMessageEvent = data => {\n    const {\n      action,\n      message\n    } = data;\n    if (action === 'create' && message.chat_id == selectedChatId) {\n      setMessages(prevMessages => [...prevMessages, message]);\n    }\n  };\n  const fetchChats = () => {\n    axios.get(`http://localhost:8003/api/chats?user_id=${user.data.id}`).then(response => {\n      setChats(response.data);\n    }).catch(error => {\n      console.error('Error fetching chats:', error);\n    });\n  };\n  const fetchMessages = chatId => {\n    setSelectedChatId(chatId);\n    axios.get(`http://localhost:8003/api/chats/${chatId}/messages`).then(response => {\n      setMessages(response.data);\n      socket.emit('join', chatId);\n    }).catch(error => {\n      console.error(`Error fetching messages for chat ${chatId}:`, error);\n    });\n  };\n  const sendMessage = chatId => {\n    if (newMessage.length > 0) {\n      axios.post(`http://localhost:8003/api/chats/${chatId}/messages`, {\n        message_text: newMessage,\n        message_datetime: '2024-06-10 20:20:20',\n        sender_id: user.data.id\n      }).then(() => {\n        setNewMessage('');\n      }).catch(error => {\n        console.error('Error sending message:', error);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4 flex\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/4 border-r pr-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold mb-4\",\n        children: \"Chats\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"border p-2\",\n        children: chats.map(chat => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `mb-2 p-2 cursor-pointer ${selectedChatId === chat.chat_id ? 'bg-blue-100' : ''}`,\n          onClick: () => {\n            setSelectedChatId(chat.chat_id);\n            fetchMessages(chat.chat_id);\n          },\n          children: chat.chat_id\n        }, chat.chat_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-3/4 pl-4\",\n      children: selectedChatId ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-2\",\n          children: \"Messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"border p-2 h-80 overflow-y-scroll\",\n          children: messages.map(message => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"mb-2\",\n            children: [message.message_text, /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-gray-500\",\n              children: message.message_datetime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 23\n            }, this)]\n          }, message.message_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2 flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newMessage,\n            onChange: e => setNewMessage(e.target.value),\n            className: \"border p-2 mr-2 w-full\",\n            placeholder: \"Type a message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => sendMessage(selectedChatId),\n            className: \"bg-green-500 text-white p-2 rounded\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-gray-500\",\n        children: \"Select a chat to view messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n}\n_s(ChatsIndexPage, \"ZljBKIQHiLmT9b7HXZotHq/LHYg=\");\n_c = ChatsIndexPage;\nvar _c;\n$RefreshReg$(_c, \"ChatsIndexPage\");","map":{"version":3,"names":["useContext","useEffect","useState","UserContext","io","axios","jsxDEV","_jsxDEV","socket","ChatsIndexPage","_s","user","getUser","chats","setChats","selectedChatId","setSelectedChatId","messages","setMessages","newMessage","setNewMessage","fetchChats","on","handleChatEvent","handleMessageEvent","off","data","action","chat","prevChats","message","chat_id","prevMessages","get","id","then","response","catch","error","console","fetchMessages","chatId","emit","sendMessage","length","post","message_text","message_datetime","sender_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","message_id","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["/home/ivan/Desktop/diplom/client/src/pages/ChatsIndexPage.jsx"],"sourcesContent":["import { useContext, useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { UserContext } from \"../UserContext\";\nimport { io } from \"socket.io-client\";\nimport axios from \"axios\";\n\nconst socket = io('http://localhost:8003');\n\nexport default function ChatsIndexPage() {\n    const {user, getUser} = useContext(UserContext);\n    const [chats, setChats] = useState([]);\n    const [selectedChatId, setSelectedChatId] = useState(null);\n    const [messages, setMessages] = useState([]);\n    const [newMessage, setNewMessage] = useState(''); \n\n    useEffect(() => {\n        if (!user) {\n            getUser();\n        } else {\n            fetchChats();\n            socket.on('chat', handleChatEvent);\n            socket.on('message', handleMessageEvent);\n            return () => {\n                socket.off('chat', handleChatEvent);\n                socket.off('message', handleMessageEvent);\n            };\n        }\n    }, []);\n    \n    const handleChatEvent = (data) => {\n        const { action, chat } = data;\n        if (action === 'create') {\n          setChats(prevChats => [...prevChats, chat]);\n        }\n    };\n    \n    const handleMessageEvent = (data) => {\n        const { action, message } = data;\n        if (action === 'create' && message.chat_id == selectedChatId) {\n          setMessages(prevMessages => [...prevMessages, message]);\n        }\n    };\n    \n    const fetchChats = () => {\n        axios.get(`http://localhost:8003/api/chats?user_id=${user.data.id}`)\n          .then(response => {\n            setChats(response.data);\n          })\n          .catch(error => {\n            console.error('Error fetching chats:', error);\n          });\n    };\n    \n    const fetchMessages = (chatId) => {\n        setSelectedChatId(chatId);\n        axios.get(`http://localhost:8003/api/chats/${chatId}/messages`)\n          .then(response => {\n            setMessages(response.data);\n            socket.emit('join', chatId);\n          })\n          .catch(error => {\n            console.error(`Error fetching messages for chat ${chatId}:`, error);\n        });\n    };\n    \n    \n    const sendMessage = (chatId) => {\n        if (newMessage.length > 0) {\n            axios.post(`http://localhost:8003/api/chats/${chatId}/messages`, {\n                message_text: newMessage,\n                message_datetime: '2024-06-10 20:20:20',\n                sender_id: user.data.id \n             })\n             .then(() => {\n               setNewMessage('');\n             })\n             .catch(error => {\n               console.error('Error sending message:', error);\n             });\n        }\n    };\n\n    return (\n        <div className=\"container mx-auto p-4 flex\">\n          <div className=\"w-1/4 border-r pr-4\">\n            <h1 className=\"text-2xl font-bold mb-4\">Chats</h1>\n            <ul className=\"border p-2\">\n              {chats.map(chat => (\n                <li key={chat.chat_id} className={`mb-2 p-2 cursor-pointer ${selectedChatId === chat.chat_id ? 'bg-blue-100' : ''}`} onClick={() => {\n                  setSelectedChatId(chat.chat_id);\n                  fetchMessages(chat.chat_id);\n                }}>\n                  {chat.chat_id}\n                </li>\n              ))}\n            </ul>\n          </div>\n          <div className=\"w-3/4 pl-4\">\n            {selectedChatId ? (\n              <div>\n                <h2 className=\"text-xl font-bold mb-2\">Messages</h2>\n                <ul className=\"border p-2 h-80 overflow-y-scroll\">\n                  {(messages).map(message => (\n                    <li key={message.message_id} className=\"mb-2\">\n                      {message.message_text} \n                      <span className=\"text-gray-500\">{message.message_datetime}</span>\n                    </li>\n                  ))}\n                </ul>\n                <div className=\"mt-2 flex\">\n                  <input\n                    type=\"text\"\n                    value={newMessage}\n                    onChange={(e) => setNewMessage(e.target.value)}\n                    className=\"border p-2 mr-2 w-full\"\n                    placeholder=\"Type a message\"\n                  />\n                  <button onClick={() => sendMessage(selectedChatId)} className=\"bg-green-500 text-white p-2 rounded\">Send</button>\n                </div>\n              </div>\n            ) : (\n              <div className=\"text-center text-gray-500\">Select a chat to view messages</div>\n            )}\n          </div>\n        </div>\n    );\n}"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC7C,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,EAAE,QAAQ,kBAAkB;AACrC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,MAAM,GAAGJ,EAAE,CAAC,uBAAuB,CAAC;AAE1C,eAAe,SAASK,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACrC,MAAM;IAACC,IAAI;IAAEC;EAAO,CAAC,GAAGZ,UAAU,CAACG,WAAW,CAAC;EAC/C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACiB,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACZ,IAAI,CAACU,IAAI,EAAE;MACPC,OAAO,CAAC,CAAC;IACb,CAAC,MAAM;MACHS,UAAU,CAAC,CAAC;MACZb,MAAM,CAACc,EAAE,CAAC,MAAM,EAAEC,eAAe,CAAC;MAClCf,MAAM,CAACc,EAAE,CAAC,SAAS,EAAEE,kBAAkB,CAAC;MACxC,OAAO,MAAM;QACThB,MAAM,CAACiB,GAAG,CAAC,MAAM,EAAEF,eAAe,CAAC;QACnCf,MAAM,CAACiB,GAAG,CAAC,SAAS,EAAED,kBAAkB,CAAC;MAC7C,CAAC;IACL;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMD,eAAe,GAAIG,IAAI,IAAK;IAC9B,MAAM;MAAEC,MAAM;MAAEC;IAAK,CAAC,GAAGF,IAAI;IAC7B,IAAIC,MAAM,KAAK,QAAQ,EAAE;MACvBb,QAAQ,CAACe,SAAS,IAAI,CAAC,GAAGA,SAAS,EAAED,IAAI,CAAC,CAAC;IAC7C;EACJ,CAAC;EAED,MAAMJ,kBAAkB,GAAIE,IAAI,IAAK;IACjC,MAAM;MAAEC,MAAM;MAAEG;IAAQ,CAAC,GAAGJ,IAAI;IAChC,IAAIC,MAAM,KAAK,QAAQ,IAAIG,OAAO,CAACC,OAAO,IAAIhB,cAAc,EAAE;MAC5DG,WAAW,CAACc,YAAY,IAAI,CAAC,GAAGA,YAAY,EAAEF,OAAO,CAAC,CAAC;IACzD;EACJ,CAAC;EAED,MAAMT,UAAU,GAAGA,CAAA,KAAM;IACrBhB,KAAK,CAAC4B,GAAG,CAAE,2CAA0CtB,IAAI,CAACe,IAAI,CAACQ,EAAG,EAAC,CAAC,CACjEC,IAAI,CAACC,QAAQ,IAAI;MAChBtB,QAAQ,CAACsB,QAAQ,CAACV,IAAI,CAAC;IACzB,CAAC,CAAC,CACDW,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C,CAAC,CAAC;EACR,CAAC;EAED,MAAME,aAAa,GAAIC,MAAM,IAAK;IAC9BzB,iBAAiB,CAACyB,MAAM,CAAC;IACzBpC,KAAK,CAAC4B,GAAG,CAAE,mCAAkCQ,MAAO,WAAU,CAAC,CAC5DN,IAAI,CAACC,QAAQ,IAAI;MAChBlB,WAAW,CAACkB,QAAQ,CAACV,IAAI,CAAC;MAC1BlB,MAAM,CAACkC,IAAI,CAAC,MAAM,EAAED,MAAM,CAAC;IAC7B,CAAC,CAAC,CACDJ,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAE,oCAAmCG,MAAO,GAAE,EAAEH,KAAK,CAAC;IACvE,CAAC,CAAC;EACN,CAAC;EAGD,MAAMK,WAAW,GAAIF,MAAM,IAAK;IAC5B,IAAItB,UAAU,CAACyB,MAAM,GAAG,CAAC,EAAE;MACvBvC,KAAK,CAACwC,IAAI,CAAE,mCAAkCJ,MAAO,WAAU,EAAE;QAC7DK,YAAY,EAAE3B,UAAU;QACxB4B,gBAAgB,EAAE,qBAAqB;QACvCC,SAAS,EAAErC,IAAI,CAACe,IAAI,CAACQ;MACxB,CAAC,CAAC,CACDC,IAAI,CAAC,MAAM;QACVf,aAAa,CAAC,EAAE,CAAC;MACnB,CAAC,CAAC,CACDiB,KAAK,CAACC,KAAK,IAAI;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD,CAAC,CAAC;IACP;EACJ,CAAC;EAED,oBACI/B,OAAA;IAAK0C,SAAS,EAAC,4BAA4B;IAAAC,QAAA,gBACzC3C,OAAA;MAAK0C,SAAS,EAAC,qBAAqB;MAAAC,QAAA,gBAClC3C,OAAA;QAAI0C,SAAS,EAAC,yBAAyB;QAAAC,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClD/C,OAAA;QAAI0C,SAAS,EAAC,YAAY;QAAAC,QAAA,EACvBrC,KAAK,CAAC0C,GAAG,CAAC3B,IAAI,iBACbrB,OAAA;UAAuB0C,SAAS,EAAG,2BAA0BlC,cAAc,KAAKa,IAAI,CAACG,OAAO,GAAG,aAAa,GAAG,EAAG,EAAE;UAACyB,OAAO,EAAEA,CAAA,KAAM;YAClIxC,iBAAiB,CAACY,IAAI,CAACG,OAAO,CAAC;YAC/BS,aAAa,CAACZ,IAAI,CAACG,OAAO,CAAC;UAC7B,CAAE;UAAAmB,QAAA,EACCtB,IAAI,CAACG;QAAO,GAJNH,IAAI,CAACG,OAAO;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKjB,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACN/C,OAAA;MAAK0C,SAAS,EAAC,YAAY;MAAAC,QAAA,EACxBnC,cAAc,gBACbR,OAAA;QAAA2C,QAAA,gBACE3C,OAAA;UAAI0C,SAAS,EAAC,wBAAwB;UAAAC,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpD/C,OAAA;UAAI0C,SAAS,EAAC,mCAAmC;UAAAC,QAAA,EAC7CjC,QAAQ,CAAEsC,GAAG,CAACzB,OAAO,iBACrBvB,OAAA;YAA6B0C,SAAS,EAAC,MAAM;YAAAC,QAAA,GAC1CpB,OAAO,CAACgB,YAAY,eACrBvC,OAAA;cAAM0C,SAAS,EAAC,eAAe;cAAAC,QAAA,EAAEpB,OAAO,CAACiB;YAAgB;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA,GAF1DxB,OAAO,CAAC2B,UAAU;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAGvB,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACL/C,OAAA;UAAK0C,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxB3C,OAAA;YACEmD,IAAI,EAAC,MAAM;YACXC,KAAK,EAAExC,UAAW;YAClByC,QAAQ,EAAGC,CAAC,IAAKzC,aAAa,CAACyC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;YAC/CV,SAAS,EAAC,wBAAwB;YAClCc,WAAW,EAAC;UAAgB;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B,CAAC,eACF/C,OAAA;YAAQiD,OAAO,EAAEA,CAAA,KAAMb,WAAW,CAAC5B,cAAc,CAAE;YAACkC,SAAS,EAAC,qCAAqC;YAAAC,QAAA,EAAC;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9G,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,gBAEN/C,OAAA;QAAK0C,SAAS,EAAC,2BAA2B;QAAAC,QAAA,EAAC;MAA8B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAC/E;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEd;AAAC5C,EAAA,CAtHuBD,cAAc;AAAAuD,EAAA,GAAdvD,cAAc;AAAA,IAAAuD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}