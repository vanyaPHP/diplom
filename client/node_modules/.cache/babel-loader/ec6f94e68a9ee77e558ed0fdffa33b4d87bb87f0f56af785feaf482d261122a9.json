{"ast":null,"code":"var _jsxFileName = \"/home/ivan/Desktop/diplom/client/src/pages/ChatsIndexPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport Echo from 'laravel-echo';\nimport Pusher from 'pusher-js';\nimport { UserContext } from \"../UserContext\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [chatRooms, setChatRooms] = useState([]);\n  const {\n    user,\n    getUser\n  } = useContext(UserContext);\n  const [selectedChatRoom, setSelectedChatRoom] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    if (!user) {\n      getUser();\n    } else {\n      window.Pusher = Pusher;\n      window.Echo = new Echo({\n        broadcaster: 'pusher',\n        key: 'your-pusher-app-key',\n        cluster: 'your-pusher-app-cluster',\n        forceTLS: true\n      });\n      const fetchChatRooms = async () => {\n        const response = await axios.get(`/chats?user_id=${user.data.id}`);\n        setChatRooms(response.data);\n      };\n      fetchChatRooms();\n    }\n  }, []);\n  useEffect(() => {\n    if (selectedChatRoom) {\n      window.Echo.channel(`chat.${selectedChatRoom.id}`).listen('MessageSent', e => {\n        console.log('Message received:', e); // Add console log to check messages\n        setMessages(messages => [...messages, e.message]);\n      });\n      return () => {\n        window.Echo.leaveChannel(`chat.${selectedChatRoom.id}`);\n      };\n    }\n  }, [selectedChatRoom]);\n  const selectChatRoom = async chatRoom => {\n    setSelectedChatRoom(chatRoom);\n    const response = await axios.get(`http://your-laravel-backend-url/chat-rooms/${chatRoom.id}`);\n    setMessages(response.data.messages);\n  };\n  const sendMessage = async () => {\n    if (selectedChatRoom && message) {\n      await axios.post('http://your-laravel-backend-url/messages', {\n        chat_room_id: selectedChatRoom.id,\n        message\n      });\n      setMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Chat Rooms\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: chatRooms.map(chatRoom => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => selectChatRoom(chatRoom),\n          children: chatRoom.name\n        }, chatRoom.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: selectedChatRoom && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Messages in \", selectedChatRoom.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: msg.message\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: message,\n          onChange: e => setMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(Chat, \"E4s81VoyW+qjAyzRKjwZjw7Dw1Y=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useContext","useEffect","useState","Echo","Pusher","UserContext","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Chat","_s","chatRooms","setChatRooms","user","getUser","selectedChatRoom","setSelectedChatRoom","messages","setMessages","message","setMessage","window","broadcaster","key","cluster","forceTLS","fetchChatRooms","response","get","data","id","channel","listen","e","console","log","leaveChannel","selectChatRoom","chatRoom","sendMessage","post","chat_room_id","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","name","msg","index","type","value","onChange","target","_c","$RefreshReg$"],"sources":["/home/ivan/Desktop/diplom/client/src/pages/ChatsIndexPage.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport Echo from 'laravel-echo';\nimport Pusher from 'pusher-js';\nimport {UserContext} from \"../UserContext\";\nimport axios from 'axios';\n\nconst Chat = () => {\n    const [chatRooms, setChatRooms] = useState([]);\n    const {user, getUser} = useContext(UserContext);\n    const [selectedChatRoom, setSelectedChatRoom] = useState(null);\n    const [messages, setMessages] = useState([]);\n    const [message, setMessage] = useState('');\n\n    useEffect(() => {\n        if (!user) {\n            getUser();\n        } else {\n            window.Pusher = Pusher;\n            window.Echo = new Echo({\n                broadcaster: 'pusher',\n                key: 'your-pusher-app-key',\n                cluster: 'your-pusher-app-cluster',\n                forceTLS: true,\n            });\n    \n            const fetchChatRooms = async () => {\n                const response = await axios.get(`/chats?user_id=${user.data.id}`);\n                setChatRooms(response.data);\n            };\n    \n            fetchChatRooms();\n        }\n    }, []);\n\n    useEffect(() => {\n        if (selectedChatRoom) {\n            window.Echo.channel(`chat.${selectedChatRoom.id}`)\n                .listen('MessageSent', (e) => {\n                    console.log('Message received:', e);  // Add console log to check messages\n                    setMessages(messages => [...messages, e.message]);\n                });\n\n            return () => {\n                window.Echo.leaveChannel(`chat.${selectedChatRoom.id}`);\n            };\n        }\n    }, [selectedChatRoom]);\n\n    const selectChatRoom = async (chatRoom) => {\n        setSelectedChatRoom(chatRoom);\n        const response = await axios.get(`http://your-laravel-backend-url/chat-rooms/${chatRoom.id}`);\n        setMessages(response.data.messages);\n    };\n\n    const sendMessage = async () => {\n        if (selectedChatRoom && message) {\n            await axios.post('http://your-laravel-backend-url/messages', {\n                chat_room_id: selectedChatRoom.id,\n                message\n            });\n            setMessage('');\n        }\n    };\n\n    return (\n        <div>\n            <div>\n                <h2>Chat Rooms</h2>\n                <ul>\n                    {chatRooms.map(chatRoom => (\n                        <li key={chatRoom.id} onClick={() => selectChatRoom(chatRoom)}>\n                            {chatRoom.name}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n            <div>\n                {selectedChatRoom && (\n                    <>\n                        <h3>Messages in {selectedChatRoom.name}</h3>\n                        <div>\n                            {messages.map((msg, index) => (\n                                <div key={index}>{msg.message}</div>\n                            ))}\n                        </div>\n                        <input\n                            type=\"text\"\n                            value={message}\n                            onChange={(e) => setMessage(e.target.value)}\n                        />\n                        <button onClick={sendMessage}>Send</button>\n                    </>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default Chat;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}