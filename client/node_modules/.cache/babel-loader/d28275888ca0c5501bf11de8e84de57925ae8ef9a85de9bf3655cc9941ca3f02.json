{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useContext, useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { UserContext } from \"../UserContext\";\nimport { io } from \"socket.io-client\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:8003');\nexport default function ChatsIndexPage() {\n  _s();\n  const {\n    user,\n    getUser\n  } = useContext(UserContext);\n  const [chats, setChats] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  useEffect(() => {\n    fetchChats();\n    socket.on('chat', handleChatEvent);\n    socket.on('message', handleMessageEvent);\n    return () => {\n      socket.off('chat', handleChatEvent);\n      socket.off('message', handleMessageEvent);\n    };\n  }, []);\n  const handleChatEvent = data => {\n    const {\n      action,\n      chat\n    } = data;\n    if (action === 'create') {\n      setChats(prevChats => [...prevChats, chat]);\n    }\n  };\n  const handleMessageEvent = data => {\n    const {\n      action,\n      message\n    } = data;\n    if (action === 'create') {\n      setMessages(prevMessages => ({\n        ...prevMessages,\n        [message.chat_id]: [...(prevMessages[message.chat_id] || []), message]\n      }));\n    }\n  };\n  const fetchChats = () => {\n    axios.get(`http://localhost:8003/api/chats?user_id=${user.data.id}`).then(response => {\n      setChats(response.data);\n    }).catch(error => {\n      console.error('Error fetching chats:', error);\n    });\n  };\n  const fetchMessages = chatId => {\n    axios.get(`http://localhost:8003/api/chats/${chatId}/messages`).then(response => {\n      setMessages(prevMessages => ({\n        ...prevMessages,\n        [chatId]: response.data\n      }));\n      socket.emit('join', chatId);\n    }).catch(error => {\n      console.error(`Error fetching messages for chat ${chatId}:`, error);\n    });\n  };\n  const sendMessage = chatId => {\n    axios.post(`http://localhost:8003/api/chats/${chatId}/messages`, {\n      message_text: newMessage,\n      message_datetime: '2024-06-10 20:20:20',\n      sender_id: user.data.id\n    }).then(() => {\n      setNewMessage('');\n    }).catch(error => {\n      console.error('Error sending message:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(ChatsIndexPage, \"oANHJ0gK2SDXIfHWrMlsN7FGKEg=\");\n_c = ChatsIndexPage;\nvar _c;\n$RefreshReg$(_c, \"ChatsIndexPage\");","map":{"version":3,"names":["useContext","useEffect","useState","UserContext","io","Fragment","_Fragment","jsxDEV","_jsxDEV","socket","ChatsIndexPage","_s","user","getUser","chats","setChats","messages","setMessages","newMessage","setNewMessage","fetchChats","on","handleChatEvent","handleMessageEvent","off","data","action","chat","prevChats","message","prevMessages","chat_id","axios","get","id","then","response","catch","error","console","fetchMessages","chatId","emit","sendMessage","post","message_text","message_datetime","sender_id","_c","$RefreshReg$"],"sources":["/home/ivan/Desktop/diplom/client/src/pages/ChatsIndexPage.jsx"],"sourcesContent":["import { useContext, useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { UserContext } from \"../UserContext\";\nimport { io } from \"socket.io-client\";\n\nconst socket = io('http://localhost:8003');\n\nexport default function ChatsIndexPage() {\n    const {user, getUser} = useContext(UserContext);\n    const [chats, setChats] = useState([]);\n    const [messages, setMessages] = useState([]);\n    const [newMessage, setNewMessage] = useState(''); \n\n    useEffect(() => {\n        fetchChats();\n        socket.on('chat', handleChatEvent);\n        socket.on('message', handleMessageEvent);\n        return () => {\n            socket.off('chat', handleChatEvent);\n            socket.off('message', handleMessageEvent);\n        };\n    }, []);\n    \n    const handleChatEvent = (data) => {\n        const { action, chat } = data;\n        if (action === 'create') {\n          setChats(prevChats => [...prevChats, chat]);\n        }\n    };\n    \n    const handleMessageEvent = (data) => {\n        const { action, message } = data;\n        if (action === 'create') {\n          setMessages(prevMessages => ({\n            ...prevMessages,\n            [message.chat_id]: [...(prevMessages[message.chat_id] || []), message]\n          }));\n        }\n    };\n    \n    const fetchChats = () => {\n        axios.get(`http://localhost:8003/api/chats?user_id=${user.data.id}`)\n          .then(response => {\n            setChats(response.data);\n          })\n          .catch(error => {\n            console.error('Error fetching chats:', error);\n          });\n    };\n    \n    const fetchMessages = (chatId) => {\n        axios.get(`http://localhost:8003/api/chats/${chatId}/messages`)\n          .then(response => {\n            setMessages(prevMessages => ({\n              ...prevMessages,\n              [chatId]: response.data\n            }));\n            socket.emit('join', chatId);\n          })\n          .catch(error => {\n            console.error(`Error fetching messages for chat ${chatId}:`, error);\n          });\n    };\n    \n    \n    const sendMessage = (chatId) => {\n        axios.post(`http://localhost:8003/api/chats/${chatId}/messages`, {\n             message_text: newMessage,\n             message_datetime: '2024-06-10 20:20:20',\n             sender_id: user.data.id \n          })\n          .then(() => {\n            setNewMessage('');\n          })\n          .catch(error => {\n            console.error('Error sending message:', error);\n          });\n    };\n\n    return (\n        <>\n        </>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}