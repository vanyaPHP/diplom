{"ast":null,"code":"var _jsxFileName = \"/home/ivan/Desktop/diplom/client/src/pages/ChatsIndexPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Echo from 'laravel-echo';\nimport Pusher from 'pusher-js';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [chatRooms, setChatRooms] = useState([]);\n  const [selectedChatRoom, setSelectedChatRoom] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    window.Pusher = Pusher;\n    window.Echo = new Echo({\n      broadcaster: 'pusher',\n      key: 'your-pusher-app-key',\n      cluster: 'your-pusher-app-cluster',\n      forceTLS: true\n    });\n    const fetchChatRooms = async () => {\n      const response = await axios.get(`/chats?user_id=${user.data.id}`);\n      setChatRooms(response.data);\n    };\n    fetchChatRooms();\n  }, []);\n  useEffect(() => {\n    if (selectedChatRoom) {\n      window.Echo.channel(`chat.${selectedChatRoom.id}`).listen('MessageSent', e => {\n        console.log('Message received:', e); // Add console log to check messages\n        setMessages(messages => [...messages, e.message]);\n      });\n      return () => {\n        window.Echo.leaveChannel(`chat.${selectedChatRoom.id}`);\n      };\n    }\n  }, [selectedChatRoom]);\n  const selectChatRoom = async chatRoom => {\n    setSelectedChatRoom(chatRoom);\n    const response = await axios.get(`http://your-laravel-backend-url/chat-rooms/${chatRoom.id}`);\n    setMessages(response.data.messages);\n  };\n  const sendMessage = async () => {\n    if (selectedChatRoom && message) {\n      await axios.post('http://your-laravel-backend-url/messages', {\n        chat_room_id: selectedChatRoom.id,\n        message\n      });\n      setMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Chat Rooms\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: chatRooms.map(chatRoom => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => selectChatRoom(chatRoom),\n          children: chatRoom.name\n        }, chatRoom.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: selectedChatRoom && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Messages in \", selectedChatRoom.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: msg.message\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: message,\n          onChange: e => setMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(Chat, \"Ph0GtK2Z5c6qyIVlO903yfQVcS4=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","Echo","Pusher","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Chat","_s","chatRooms","setChatRooms","selectedChatRoom","setSelectedChatRoom","messages","setMessages","message","setMessage","window","broadcaster","key","cluster","forceTLS","fetchChatRooms","response","get","user","data","id","channel","listen","e","console","log","leaveChannel","selectChatRoom","chatRoom","sendMessage","post","chat_room_id","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","name","msg","index","type","value","onChange","target","_c","$RefreshReg$"],"sources":["/home/ivan/Desktop/diplom/client/src/pages/ChatsIndexPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Echo from 'laravel-echo';\nimport Pusher from 'pusher-js';\nimport axios from 'axios';\n\nconst Chat = () => {\n    const [chatRooms, setChatRooms] = useState([]);\n    const [selectedChatRoom, setSelectedChatRoom] = useState(null);\n    const [messages, setMessages] = useState([]);\n    const [message, setMessage] = useState('');\n\n    useEffect(() => {\n        window.Pusher = Pusher;\n        window.Echo = new Echo({\n            broadcaster: 'pusher',\n            key: 'your-pusher-app-key',\n            cluster: 'your-pusher-app-cluster',\n            forceTLS: true,\n        });\n\n        const fetchChatRooms = async () => {\n            const response = await axios.get(`/chats?user_id=${user.data.id}`);\n            setChatRooms(response.data);\n        };\n\n        fetchChatRooms();\n    }, []);\n\n    useEffect(() => {\n        if (selectedChatRoom) {\n            window.Echo.channel(`chat.${selectedChatRoom.id}`)\n                .listen('MessageSent', (e) => {\n                    console.log('Message received:', e);  // Add console log to check messages\n                    setMessages(messages => [...messages, e.message]);\n                });\n\n            return () => {\n                window.Echo.leaveChannel(`chat.${selectedChatRoom.id}`);\n            };\n        }\n    }, [selectedChatRoom]);\n\n    const selectChatRoom = async (chatRoom) => {\n        setSelectedChatRoom(chatRoom);\n        const response = await axios.get(`http://your-laravel-backend-url/chat-rooms/${chatRoom.id}`);\n        setMessages(response.data.messages);\n    };\n\n    const sendMessage = async () => {\n        if (selectedChatRoom && message) {\n            await axios.post('http://your-laravel-backend-url/messages', {\n                chat_room_id: selectedChatRoom.id,\n                message\n            });\n            setMessage('');\n        }\n    };\n\n    return (\n        <div>\n            <div>\n                <h2>Chat Rooms</h2>\n                <ul>\n                    {chatRooms.map(chatRoom => (\n                        <li key={chatRoom.id} onClick={() => selectChatRoom(chatRoom)}>\n                            {chatRoom.name}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n            <div>\n                {selectedChatRoom && (\n                    <>\n                        <h3>Messages in {selectedChatRoom.name}</h3>\n                        <div>\n                            {messages.map((msg, index) => (\n                                <div key={index}>{msg.message}</div>\n                            ))}\n                        </div>\n                        <input\n                            type=\"text\"\n                            value={message}\n                            onChange={(e) => setMessage(e.target.value)}\n                        />\n                        <button onClick={sendMessage}>Send</button>\n                    </>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default Chat;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}