{"ast":null,"code":"var _jsxFileName = \"/home/ivan/Desktop/diplom/client/src/pages/ChatsIndexPage.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport Echo from \"laravel-echo\";\nimport Pusher from \"pusher-js\";\nimport { useContext, useEffect } from \"react\";\nimport { UserContext } from \"../UserContext\";\nimport { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ChatsIndexPage() {\n  _s();\n  const [chats, setChats] = useState([]);\n  const params = useParams();\n  const {\n    user,\n    getUser\n  } = useContext(UserContext);\n  const [selectedChat, setSelectedChat] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  useEffect(() => {\n    if (!user) {\n      getUser();\n    } else {\n      window.Pusher = Pusher;\n      window.Echo = new Echo({\n        broadcaster: 'pusher',\n        key: '0abcc2e1499f2ddde046',\n        cluster: 'eu',\n        encrypted: true\n      });\n      const fetchChats = async () => {\n        const response = await axios.get(`/chats?user_id=${user.data.id}`);\n        setChats(response.data);\n      };\n      fetchChats();\n      if (params.id) {\n        selectChat(params.id);\n      }\n    }\n  }, [user]);\n  useEffect(() => {\n    if (selectedChat) {\n      window.Echo.private(`chat.${selectedChat.chat_id}`).listen('MessageSent', e => {\n        setMessages(messages => [...messages, e.message]);\n      });\n      return () => {\n        window.Echo.leaveChannel(`chat.${selectedChat.chat_id}`);\n      };\n    }\n  }, [user]);\n  const selectChat = async chat_id => {\n    const response = await axios.get(`/chats/${chat_id}`);\n    setSelectedChat(response.data);\n    setMessages(response.data.messages);\n  };\n  const sendMessage = async () => {\n    if (selectedChat) {\n      await axios.post(`/chats/${selectedChat.chat_id}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Chat Rooms\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: chats.map(chat => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => selectChat(chat.chat_id),\n          children: chat.chat_id\n        }, chat.chat_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: selectChat && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Messages in \", selectChat.chat_id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: msg.message_text\n          }, msg.message_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n_s(ChatsIndexPage, \"xvqgzVJzHoPFFUj2HN8Kch4uEP4=\", false, function () {\n  return [useParams];\n});\n_c = ChatsIndexPage;\nvar _c;\n$RefreshReg$(_c, \"ChatsIndexPage\");","map":{"version":3,"names":["axios","Echo","Pusher","useContext","useEffect","UserContext","useState","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatsIndexPage","_s","chats","setChats","params","user","getUser","selectedChat","setSelectedChat","messages","setMessages","newMessage","setNewMessage","window","broadcaster","key","cluster","encrypted","fetchChats","response","get","data","id","selectChat","private","chat_id","listen","e","message","leaveChannel","sendMessage","post","children","fileName","_jsxFileName","lineNumber","columnNumber","map","chat","onClick","msg","message_text","message_id","type","value","onChange","target","_c","$RefreshReg$"],"sources":["/home/ivan/Desktop/diplom/client/src/pages/ChatsIndexPage.jsx"],"sourcesContent":["import axios from \"axios\";\nimport Echo from \"laravel-echo\";\nimport Pusher from \"pusher-js\";\nimport { useContext, useEffect } from \"react\";\nimport { UserContext } from \"../UserContext\";\nimport { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nexport default function ChatsIndexPage() {\n    const [chats, setChats] = useState([]);\n    const params = useParams();\n    const {user, getUser} = useContext(UserContext);\n    const [selectedChat, setSelectedChat] = useState(null);\n    const [messages, setMessages] = useState([]);\n    const [newMessage, setNewMessage] = useState('');\n    \n    useEffect(() => {\n        if (!user) {\n            getUser();\n        } else {\n            window.Pusher = Pusher;\n            window.Echo = new Echo({\n                broadcaster: 'pusher',\n                key: '0abcc2e1499f2ddde046',\n                cluster: 'eu',\n                encrypted: true\n            })\n\n            const fetchChats = async () => {\n                const response = await axios.get(`/chats?user_id=${user.data.id}`);\n                setChats(response.data);\n            }\n\n            fetchChats();\n\n            if (params.id) {\n                selectChat(params.id);   \n            }\n        }\n    }, [user]);\n\n    useEffect(() => {\n        if (selectedChat) {\n            window.Echo.private(`chat.${selectedChat.chat_id}`)\n            .listen('MessageSent', (e) => {\n                setMessages(messages => [...messages, e.message]);\n            });\n\n            return () => {\n                window.Echo.leaveChannel(`chat.${selectedChat.chat_id}`);\n            }\n        }    \n    }, [user]);\n\n    const selectChat = async (chat_id) => {\n        const response = await axios.get(`/chats/${chat_id}`);\n        setSelectedChat(response.data);\n        setMessages(response.data.messages);\n    };\n\n    const sendMessage = async () => {\n        if (selectedChat) {\n            await axios.post(`/chats/${selectedChat.chat_id}`)\n        }\n    };\n\n    return (\n        <div>\n            <div>\n                <h2>Chat Rooms</h2>\n                <ul>\n                    {chats.map(chat => (\n                        <li key={chat.chat_id} onClick={() => selectChat(chat.chat_id)}>\n                            {chat.chat_id}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n            <div>\n                {selectChat && (\n                    <>\n                        <h3>Messages in {selectChat.chat_id}</h3>\n                        <div>\n                            {messages.map((msg) => (\n                                <div key={msg.message_id}>{msg.message_text}</div>\n                            ))}\n                        </div>\n                        <input\n                            type=\"text\"\n                            value={newMessage}\n                            onChange={(e) => setNewMessage(e.target.value)}\n                        />\n                        <button onClick={sendMessage}>Send</button>\n                    </>\n                )}\n            </div>\n        </div>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}