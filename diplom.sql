-- MySQL Script generated by MySQL Workbench
-- Fri Dec 22 20:05:56 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `mydb` ;

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`Address_details`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Address_details` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Address_details` (
  `address_details_id` BIGINT NOT NULL AUTO_INCREMENT,
  `city_id` INT NOT NULL,
  `street` VARCHAR(45) NOT NULL,
  `building` SMALLINT(255) NOT NULL,
  PRIMARY KEY (`address_details_id`),
  CONSTRAINT `city_id`
    FOREIGN KEY (`city_id`)
    REFERENCES `mydb`.`City` (`city_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `city_id_idx` ON `mydb`.`Address_details` (`city_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`Admin`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Admin` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Admin` (
  `admin_id` INT NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(40) NOT NULL,
  `last_name` VARCHAR(40) NOT NULL,
  `password` VARCHAR(60) NOT NULL,
  `email` VARCHAR(40) NOT NULL,
  PRIMARY KEY (`admin_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Bet`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Bet` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Bet` (
  `bet_id` BIGINT NOT NULL AUTO_INCREMENT,
  `product_id` BIGINT NOT NULL,
  `buyer_id` BIGINT NOT NULL,
  `price` INT NOT NULL,
  `made_datetime` DATETIME NOT NULL,
  `bet_status_id` TINYINT(2) NULL,
  `accepted_datetime` DATETIME NULL,
  `bet_won` TINYINT(1) NULL,
  PRIMARY KEY (`bet_id`),
  CONSTRAINT `product_id`
    FOREIGN KEY (`product_id`)
    REFERENCES `mydb`.`Product` (`product_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `buyer_id`
    FOREIGN KEY (`buyer_id`)
    REFERENCES `mydb`.`User` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `bet_status_id`
    FOREIGN KEY (`bet_status_id`)
    REFERENCES `mydb`.`Bet_status` (`bet_status_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `product_id_idx` ON `mydb`.`Bet` (`product_id` ASC) VISIBLE;

CREATE INDEX `buyer_id_idx` ON `mydb`.`Bet` (`buyer_id` ASC) VISIBLE;

CREATE INDEX `bet_status_id_idx` ON `mydb`.`Bet` (`bet_status_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`Bet_status`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Bet_status` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Bet_status` (
  `bet_status_id` TINYINT(2) NOT NULL AUTO_INCREMENT,
  `status_name` VARCHAR(25) NOT NULL,
  PRIMARY KEY (`bet_status_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Buyer_status`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Buyer_status` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Buyer_status` (
  `buyer_status_id` BIGINT NOT NULL AUTO_INCREMENT,
  `rating` INT NOT NULL,
  `user_id` BIGINT NOT NULL,
  `last_change_datetime` DATETIME NULL,
  `last_change_diff` INT NULL,
  PRIMARY KEY (`buyer_status_id`),
  CONSTRAINT `user_id_fk`
    FOREIGN KEY (`user_id`)
    REFERENCES `mydb`.`User` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `user_id_idx` ON `mydb`.`Buyer_status` (`user_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`Category`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Category` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Category` (
  `category_id` INT NOT NULL AUTO_INCREMENT,
  `category_name` VARCHAR(40) NOT NULL,
  `parent_category_id` INT NOT NULL,
  PRIMARY KEY (`category_id`),
  CONSTRAINT `parent_category_id`
    FOREIGN KEY (`parent_category_id`)
    REFERENCES `mydb`.`Category` (`category_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `parent_category_id_idx` ON `mydb`.`Category` (`parent_category_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`Chat`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Chat` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Chat` (
  `chat_id` BIGINT NOT NULL AUTO_INCREMENT,
  `first_user_id` BIGINT NOT NULL,
  `second_user_id` BIGINT NOT NULL,
  PRIMARY KEY (`chat_id`),
  CONSTRAINT `user_one_fk`
    FOREIGN KEY (`first_user_id`)
    REFERENCES `mydb`.`User` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `user_two_fk`
    FOREIGN KEY (`second_user_id`)
    REFERENCES `mydb`.`User` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `seller_id_idx` ON `mydb`.`Chat` (`first_user_id` ASC) VISIBLE;

CREATE INDEX `buyer_id_idx` ON `mydb`.`Chat` (`second_user_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`City`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`City` ;

CREATE TABLE IF NOT EXISTS `mydb`.`City` (
  `city_id` INT NOT NULL AUTO_INCREMENT,
  `city_code` VARCHAR(3) NOT NULL,
  `city_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`city_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Closed_deal`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Closed_deal` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Closed_deal` (
  `deal_id` BIGINT NOT NULL,
  `has_errors_on_sale` TINYINT(1) NULL,
  `has_errors_on_return` TINYINT(1) NULL,
  `deal_status_id` TINYINT(30) NOT NULL,
  `deal_closed_datetime` DATETIME NULL,
  `product_id` BIGINT NOT NULL,
  `buyer_id` BIGINT NOT NULL,
  PRIMARY KEY (`deal_id`),
  CONSTRAINT `deal_status_fk`
    FOREIGN KEY (`deal_status_id`)
    REFERENCES `mydb`.`Deal_status` (`deal_status_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `product_fk`
    FOREIGN KEY (`product_id`)
    REFERENCES `mydb`.`Product` (`product_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `buyer_fk`
    FOREIGN KEY (`buyer_id`)
    REFERENCES `mydb`.`User` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `deal_status_id_idx` ON `mydb`.`Closed_deal` (`deal_status_id` ASC) VISIBLE;

CREATE INDEX `product_id_idx` ON `mydb`.`Closed_deal` (`product_id` ASC) VISIBLE;

CREATE INDEX `buyer_id_idx` ON `mydb`.`Closed_deal` (`buyer_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`Credit_card`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Credit_card` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Credit_card` (
  `credit_card_id` BIGINT NOT NULL AUTO_INCREMENT,
  `card_number` VARCHAR(16) NOT NULL,
  `card_expiration_date` VARCHAR(4) NOT NULL,
  `card_holder` VARCHAR(40) NOT NULL,
  `card_cvv` VARCHAR(3) NOT NULL,
  `owner_id` BIGINT NOT NULL,
  PRIMARY KEY (`credit_card_id`),
  CONSTRAINT `owner_id`
    FOREIGN KEY (`owner_id`)
    REFERENCES `mydb`.`User` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `owner_id_idx` ON `mydb`.`Credit_card` (`owner_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`Deal`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Deal` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Deal` (
  `deal_id` BIGINT NOT NULL AUTO_INCREMENT,
  `bet_id` BIGINT NOT NULL,
  `payment_datetime_start` DATETIME NOT NULL,
  `pay_ok` TINYINT(1) NULL,
  `check_datetime_start` DATETIME NULL,
  `product_received_confirm_code` VARCHAR(8) NULL,
  `payback_confirm_code` VARCHAR(8) NULL,
  `product_returned_datetime` DATETIME NULL,
  `has_errors_on_sale` TINYINT(1) NULL,
  `has_errors_on_return` TINYINT(1) NULL,
  `deal_status_id` TINYINT(30) NOT NULL,
  PRIMARY KEY (`deal_id`),
  CONSTRAINT `bet_id`
    FOREIGN KEY (`bet_id`)
    REFERENCES `mydb`.`Bet` (`bet_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `deal_status_id`
    FOREIGN KEY (`deal_status_id`)
    REFERENCES `mydb`.`Deal_status` (`deal_status_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `bet_id_idx` ON `mydb`.`Deal` (`bet_id` ASC) VISIBLE;

CREATE INDEX `deal_status_id_idx` ON `mydb`.`Deal` (`deal_status_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`Deal_status`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Deal_status` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Deal_status` (
  `deal_status_id` TINYINT(30) NOT NULL AUTO_INCREMENT,
  `status_name` VARCHAR(40) NOT NULL,
  `status_description` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`deal_status_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Document`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Document` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Document` (
  `document_id` BIGINT NOT NULL AUTO_INCREMENT,
  `deal_id` BIGINT NOT NULL,
  `document_name` VARCHAR(50) NOT NULL,
  `document_owner` BIGINT NOT NULL,
  `created_at` DATETIME NOT NULL,
  PRIMARY KEY (`document_id`),
  CONSTRAINT `document_owner_fk`
    FOREIGN KEY (`document_owner`)
    REFERENCES `mydb`.`User` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `document_owner_idx` ON `mydb`.`Document` (`document_owner` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`Message`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Message` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Message` (
  `message_id` BIGINT NOT NULL AUTO_INCREMENT,
  `message_text` VARCHAR(255) NOT NULL,
  `sender_id` BIGINT NOT NULL,
  `chat_id` BIGINT NOT NULL,
  `message_datetime` DATETIME NOT NULL,
  PRIMARY KEY (`message_id`),
  CONSTRAINT `sender_fk`
    FOREIGN KEY (`sender_id`)
    REFERENCES `mydb`.`User` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `chat_fk`
    FOREIGN KEY (`chat_id`)
    REFERENCES `mydb`.`Chat` (`chat_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `sender_id_idx` ON `mydb`.`Message` (`sender_id` ASC) VISIBLE;

CREATE INDEX `chat_id_idx` ON `mydb`.`Message` (`chat_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`Product`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Product` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Product` (
  `product_id` BIGINT NOT NULL AUTO_INCREMENT,
  `product_name` VARCHAR(45) NOT NULL,
  `product_description` VARCHAR(150) NOT NULL,
  `product_start_price` INT NOT NULL,
  `category_id` INT NOT NULL,
  `ownder_id` BIGINT NOT NULL,
  `product_reviews` BIGINT NOT NULL,
  `address_details_id` BIGINT NOT NULL,
  `immediate_buy_price` INT NOT NULL,
  `is_sold` TINYINT(1) NOT NULL,
  PRIMARY KEY (`product_id`),
  CONSTRAINT `category_id`
    FOREIGN KEY (`category_id`)
    REFERENCES `mydb`.`Category` (`category_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `owner_id_fk`
    FOREIGN KEY (`ownder_id`)
    REFERENCES `mydb`.`User` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `address_details_id`
    FOREIGN KEY (`address_details_id`)
    REFERENCES `mydb`.`Address_details` (`address_details_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `category_id_idx` ON `mydb`.`Product` (`category_id` ASC) VISIBLE;

CREATE INDEX `owner_id_idx` ON `mydb`.`Product` (`ownder_id` ASC) VISIBLE;

CREATE INDEX `address_details_id_idx` ON `mydb`.`Product` (`address_details_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`Report_chat`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Report_chat` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Report_chat` (
  `report_chat_id` BIGINT NOT NULL AUTO_INCREMENT,
  `admin_id` INT NOT NULL,
  `user_id` BIGINT NOT NULL,
  PRIMARY KEY (`report_chat_id`),
  CONSTRAINT `admin_fk`
    FOREIGN KEY (`admin_id`)
    REFERENCES `mydb`.`Admin` (`admin_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `user_fk`
    FOREIGN KEY (`user_id`)
    REFERENCES `mydb`.`User` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `admin_id_idx` ON `mydb`.`Report_chat` (`admin_id` ASC) VISIBLE;

CREATE INDEX `user_id_idx` ON `mydb`.`Report_chat` (`user_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`Report_message`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Report_message` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Report_message` (
  `report_message_id` BIGINT NOT NULL,
  `report_message_text` VARCHAR(255) NOT NULL,
  `is_admin_sender` TINYINT(1) NOT NULL,
  `report_message_datetime` DATETIME NOT NULL,
  `report_chat_id` BIGINT NOT NULL,
  PRIMARY KEY (`report_message_id`),
  CONSTRAINT `report_chat_fk`
    FOREIGN KEY (`report_chat_id`)
    REFERENCES `mydb`.`Report_chat` (`report_chat_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `chat_id_idx` ON `mydb`.`Report_message` (`report_chat_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`Seller_status`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Seller_status` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Seller_status` (
  `seller_status_id` BIGINT NOT NULL AUTO_INCREMENT,
  `rating` INT NOT NULL,
  `user_id` BIGINT NOT NULL,
  `last_change_datetime` DATETIME NULL,
  `last_change_diff` INT NULL,
  PRIMARY KEY (`seller_status_id`),
  CONSTRAINT `seller_user_fk`
    FOREIGN KEY (`user_id`)
    REFERENCES `mydb`.`User` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `user_id_idx` ON `mydb`.`Seller_status` (`user_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`Transaction`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Transaction` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Transaction` (
  `transaction_id` BIGINT NOT NULL AUTO_INCREMENT,
  `source_card_id` BIGINT NOT NULL,
  `destination_card_id` BIGINT NOT NULL,
  `transaction_status_id` TINYINT(5) NOT NULL,
  `deal_id` BIGINT NOT NULL,
  PRIMARY KEY (`transaction_id`),
  CONSTRAINT `transaction_status_id`
    FOREIGN KEY (`transaction_status_id`)
    REFERENCES `mydb`.`Transaction_status` (`transaction_status_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `source_card_id`
    FOREIGN KEY (`source_card_id`)
    REFERENCES `mydb`.`Credit_card` (`credit_card_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `destination_card_id`
    FOREIGN KEY (`destination_card_id`)
    REFERENCES `mydb`.`Credit_card` (`credit_card_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `deal_id`
    FOREIGN KEY (`deal_id`)
    REFERENCES `mydb`.`Deal` (`deal_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `transaction_status_id_idx` ON `mydb`.`Transaction` (`transaction_status_id` ASC) VISIBLE;

CREATE INDEX `source_card_id_idx` ON `mydb`.`Transaction` (`source_card_id` ASC) VISIBLE;

CREATE INDEX `destination_card_id_idx` ON `mydb`.`Transaction` (`destination_card_id` ASC) VISIBLE;

CREATE INDEX `deal_id_idx` ON `mydb`.`Transaction` (`deal_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mydb`.`Transaction_status`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Transaction_status` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Transaction_status` (
  `transaction_status_id` TINYINT(5) NOT NULL AUTO_INCREMENT,
  `status_name` VARCHAR(20) NOT NULL,
  `status_description` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`transaction_status_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`User`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`User` ;

CREATE TABLE IF NOT EXISTS `mydb`.`User` (
  `user_id` BIGINT NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(40) NOT NULL,
  `last_name` VARCHAR(40) NOT NULL,
  `phone_number` VARCHAR(13) NOT NULL,
  `email` VARCHAR(40) NOT NULL,
  `password` VARCHAR(256) NOT NULL,
  PRIMARY KEY (`user_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`table1`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`table1` ;

CREATE TABLE IF NOT EXISTS `mydb`.`table1` (
  `stored_transaction_id` BIGINT NOT NULL AUTO_INCREMENT,
  `source_card_id` BIGINT NOT NULL,
  `destination_card_id` BIGINT NOT NULL,
  `transaction_status` TINYINT(5) NOT NULL,
  `closed_deal_id` BIGINT NOT NULL,
  PRIMARY KEY (`stored_transaction_id`),
  CONSTRAINT `source_card_fk`
    FOREIGN KEY (`source_card_id`)
    REFERENCES `mydb`.`Credit_card` (`credit_card_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `destination_card_fk`
    FOREIGN KEY (`destination_card_id`)
    REFERENCES `mydb`.`Credit_card` (`credit_card_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `status_fk`
    FOREIGN KEY (`transaction_status`)
    REFERENCES `mydb`.`Transaction_status` (`transaction_status_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `closed_deal_fk`
    FOREIGN KEY (`closed_deal_id`)
    REFERENCES `mydb`.`Closed_deal` (`deal_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `source_card_fk_idx` ON `mydb`.`table1` (`source_card_id` ASC) VISIBLE;

CREATE INDEX `destination_card_fk_idx` ON `mydb`.`table1` (`destination_card_id` ASC) VISIBLE;

CREATE INDEX `status_fk_idx` ON `mydb`.`table1` (`transaction_status` ASC) VISIBLE;

CREATE INDEX `closed_deal_fk_idx` ON `mydb`.`table1` (`closed_deal_id` ASC) VISIBLE;

USE `mydb`;

DELIMITER $$

USE `mydb`$$
DROP TRIGGER IF EXISTS `mydb`.`Address_details_BEFORE_INSERT` $$
USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Address_details_BEFORE_INSERT` BEFORE INSERT ON `Address_details` FOR EACH ROW
BEGIN
	DECLARE city_exists INT;
    
    -- Check if the city exists in the City table
    SELECT COUNT(*) INTO city_exists
    FROM mydb.City
    WHERE city_id = NEW.city_id;
    
    -- If the city doesn't exist, raise an error
    IF city_exists = 0 THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'City does not exist in the City table';
    END IF;
END$$


USE `mydb`$$
DROP TRIGGER IF EXISTS `mydb`.`Category_BEFORE_DELETE` $$
USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Category_BEFORE_DELETE` BEFORE DELETE ON `Category` FOR EACH ROW
BEGIN
	IF EXISTS (SELECT 1 FROM mydb.Category WHERE parent_category_id = OLD.category_id) THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Cannot delete a category with subcategories.';
    END IF;
END$$


USE `mydb`$$
DROP TRIGGER IF EXISTS `mydb`.`Product_BEFORE_UPDATE` $$
USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Product_BEFORE_UPDATE` BEFORE UPDATE ON `Product` FOR EACH ROW
BEGIN
	IF NEW.product_start_price != OLD.product_start_price THEN
        IF EXISTS (SELECT 1 FROM mydb.Bet WHERE product_id = NEW.product_id) THEN
            SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'Product price cannot be changed once there are bets.';
        END IF;
	END IF;
END$$


USE `mydb`$$
DROP TRIGGER IF EXISTS `mydb`.`Transaction_BEFORE_INSERT` $$
USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Transaction_BEFORE_INSERT` BEFORE INSERT ON `Transaction` FOR EACH ROW
BEGIN
	IF NOT EXISTS (SELECT 1 FROM mydb.Credit_card WHERE credit_card_id = NEW.source_card_id) OR
       NOT EXISTS (SELECT 1 FROM mydb.Credit_card WHERE credit_card_id = NEW.destination_card_id) THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Invalid source or destination card in the transaction.';
    END IF;
END$$


USE `mydb`$$
DROP TRIGGER IF EXISTS `mydb`.`User_BEFORE_INSERT` $$
USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`User_BEFORE_INSERT` BEFORE INSERT ON `User` FOR EACH ROW
BEGIN
	SET NEW.password = SHA2(NEW.password, 256);
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
